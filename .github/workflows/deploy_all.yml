name: Deploy metadata

on:
  push:
    branches:
    - 'main'
    - 'release/*'
    - 'pr-metadata-test'

jobs:
  enumerate_targets:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-focal:2021-09-08
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{secrets.ACCESS_TOKEN}}
    - id: set-matrix
      run: echo "::set-output name=matrix::$(./Tools/generate_board_targets_json.py)"
  build:
    runs-on: ubuntu-latest
    needs: enumerate_targets
    strategy:
      matrix: ${{fromJson(needs.enumerate_targets.outputs.matrix)}}
    container: ${{ matrix.container }}
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{secrets.ACCESS_TOKEN}}

    - name: ownership workaround
      run: git config --system --add safe.directory '*'

    - name: make ${{matrix.target}}
      run: make ${{matrix.target}}

    - name: parameter & events metadata
      run: |
        make ${{matrix.target}} ver_gen events_json actuators_json
        ./src/lib/version/get_git_tag_or_branch_version.sh build/${{ matrix.target }} >> $GITHUB_ENV
        cd build/${{ matrix.target }}
        mkdir _metadata || true
        cp parameters.* events/*.xz actuators.json* _metadata

    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read
      env:
        AWS_S3_BUCKET: 'px4-travis'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-1'
        SOURCE_DIR: 'build/${{ matrix.target }}/_metadata/'
        DEST_DIR: 'Firmware/${{ env.version }}/${{ matrix.target }}/'
  airframe_parameter_metadata:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-base-focal:2021-08-18
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{secrets.ACCESS_TOKEN}}
    - name: Build airframe & parameter metadata
      run: |
        make airframe_metadata parameters_metadata
    - name: Archive airframe & parameter metadata
      uses: actions/upload-artifact@v3
  module_documentation:
    runs-on: ubuntu-latest
  uorb_msg_documentation:
    runs-on: ubuntu-latest
  failsafe_documentation:
    runs-on: ubuntu-latest
  update_userguide:
    runs-on: ubuntu-latest
    needs: [airframe_parameter_metadata, module_documentation, uorb_msg_documentation, failsafe_documentation]
  update_qgroundcontrol:
    runs-on: ubuntu-latest
    needs: airframe_parameter_metadata
  update_px4_ros_msgs:
    runs-on: ubuntu-latest
  upload_s3_metadata:
    runs-on: ubuntu-latest
    needs: airframe_parameter_metadata
    container: px4io/px4-dev-base-focal:2021-09-08
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{secrets.ACCESS_TOKEN}}
    - name: Build generic metadata
      run: |
        make airframe_metadata parameters_metadata
        cd build/px4_sitl_default/docs
        mkdir _metadata || true
        cp parameters.xml, parameters.json.xz, airframes.xml _metadata
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read
      env:
        AWS_S3_BUCKET: 'px4-travis'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-1'
        SOURCE_DIR: 'build/px4_sitl_default/_metadata/'
        DEST_DIR: 'Firmware/${{ env.version }}/px4_sitl_default/'
